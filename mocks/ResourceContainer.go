// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import reflect "github.com/omniql/reflect"

// ResourceContainer is an autogenerated mock type for the ResourceContainer type
type ResourceContainer struct {
	mock.Mock
}

// Application provides a mock function with given fields:
func (_m *ResourceContainer) Application() reflect.ApplicationContainer {
	ret := _m.Called()

	var r0 reflect.ApplicationContainer
	if rf, ok := ret.Get(0).(func() reflect.ApplicationContainer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(reflect.ApplicationContainer)
		}
	}

	return r0
}

// ID provides a mock function with given fields:
func (_m *ResourceContainer) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *ResourceContainer) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Position provides a mock function with given fields:
func (_m *ResourceContainer) Position() uint16 {
	ret := _m.Called()

	var r0 uint16
	if rf, ok := ret.Get(0).(func() uint16); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint16)
	}

	return r0
}

// Table provides a mock function with given fields:
func (_m *ResourceContainer) Table() reflect.TableContainer {
	ret := _m.Called()

	var r0 reflect.TableContainer
	if rf, ok := ret.Get(0).(func() reflect.TableContainer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(reflect.TableContainer)
		}
	}

	return r0
}
